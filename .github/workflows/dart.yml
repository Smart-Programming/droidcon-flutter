name: Flutter CI

on:
  push:
    branches:
      - main
      - alpha
      - master
  pull_request:

jobs:
  # Check for tests coverage
  tests:
    name: Tests Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java and Cache Gradle
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - name: Set up Gradle Cache
        run: |
          mkdir -p $HOME/.gradle/caches
        id: gradle_cache

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze .

      - name: Run unit tests
        run: flutter test --coverage

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1

      - name: Report Code Coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: coverage/lcov.info
          minimum-coverage: 10
          artifact-name: code-coverage-report
          github-token: ${{ secrets.G_TOKEN }}

  version:
    name: Create version number
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

        # Debugging
      - name: Debug GitVersion Output
        run: |
          echo "GitVersion output:"
          echo "${{ steps.gitversion.outputs.json }}"

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  build-dev:
    name: Create Development Android Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          cache: true

      # Update version
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml

      - run: flutter pub get
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      - name: Create .env
        run: |
          chmod +x ./setup_env.sh
          ./setup_env.sh

      # Build apk.
      - run: flutter build apk --flavor development -t lib/bin/envs/main_development.dart --release
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-development-release.apk

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.DEV_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: dev-testers
          file: build/app/outputs/flutter-apk/app-development-release.apk

  build-stg:
    name: Create Staging Android Build
    if: github.ref == 'refs/heads/alpha'
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          cache: true

      # Update version
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml

      - run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      # Build apk.
      - run: flutter build apk --flavor staging -t lib/bin/envs//main_staging.dart --build-name=droidcon-flutter-dev  --release
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-staging-release.apk

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.STG_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: stg-testers
          file: build/app/outputs/flutter-apk/app-staging-release.apk

  build-prod:
    name: Create Prod Android Build
    if: github.ref == 'refs/heads/master'
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          cache: true

      # Update version
      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml

      - run: flutter pub get
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties

      # Build apk.
      - run: flutter build apk --flavor production -t lib/bin/envs/main_production.dart --build-name=droidcon-flutter-dev  --release
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-production-release.apk

      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.PROD_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          file: build/app/outputs/flutter-apk/app-production-release.apk
