name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: ["**"]
  pull_request:
    branches:
      ["**"]
      # - develop

# on: push    # Default will running for every branch.

jobs:
  # TODO: auto incremented versioning for firebase distribution
  # version:
  #     name: Create version number
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v3
  
  build:
    # This job will run on ubuntu virtual machine
    name: Create Android Build
    # needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.0"
          cache: true

      # Get flutter dependencies.
      - run: flutter pub get
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - name: Run unit tests
        run: flutter test --coverage

      - name: Setup LCOV
        run: sudo apt-get install lcov

      - name: Generate LCOV Report
        run: lcov --directory ./coverage/lcov.info --output-file ./coverage/coverage.lcov

      - name: Install genhtml
        run: sudo apt-get install lcov

      - name: Generate HTML Report
        run: genhtml -o ./coverage/report ./coverage/coverage.lcov

      # - name: Setup LCOV
      #   uses: hrishikesh-kadam/setup-lcov@v1
      # - name: Report code coverage
      #   uses: zgosalvez/github-actions-report-lcov@v3
      #   with:
      #     coverage-files: coverage/lcov.*.info
      #     minimum-coverage: 90
      #     artifact-name: code-coverage-report
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     working-directory: coverage/
      #     update-comment: true

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: sicarions
          file: build/app/outputs/apk/release/app-release.apk